from code.sfml_plus import Window
from code.sfml_plus import key

#########################################

from sfml import Text, Font
from sfml import Color
from sfml import KeyEvent

class TextBox:
# * May have text inputted with a keyboard.
# WIP - Box is bounded.
# WIP - Box has a flickering cursor.
# WIP - Only responds when highlighted.

	def __init__(self):
		self._create_font()
		self._create_text()

	def controls(self, window, key):
		self._input(window, key)

	def draw(self, window, camera):
		window.draw(self.text)


	###

	def _create_font(self): #init
		d = "assets/fonts/PIXEARG_.ttf"
		font = Font.from_file(d)
		self.font = font

	def _create_text(self, string=""): #init, input
		text = Text(string)
		text.font = self.font
		text.character_size = 8
		text.style = Text.REGULAR
		text.color = Color.BLACK
		text.position = 100,100
		self.text = text
		self.string = string

	###

	def _input(self, window, key):
		def add_chr(key_chr):
			self.string += key_chr
			self._create_text(self.string)

		def remove_chr():
			if len(self.string) >= 1:
				self.string = self.string[:-1]
				self._create_text(self.string)

		if window.key_pressed:
			key_chr = str(window.key_pressed)

			if key_chr.isalpha() and len(key_chr) == 1:
				if key.L_SHIFT.held():
					add_chr(key_chr.upper())
				else:
					add_chr(key_chr.lower())
			if key_chr == "BACKSPACE":
				remove_chr()
			if key_chr == "SPACE":
				add_chr(" ")

#########################################

textbox1 = TextBox() #

window = Window((1200,600), "Pop-up Boxes")
from code.sfml_plus import Camera
Camera = Camera(window)
Camera.zoom = 1
Camera.position = 0,0


while window.is_open:
	if window.is_focused:
		if key.ENTER.pressed(): print textbox1.string
		textbox1.controls(window, key) #


	window.view = Camera
	window.clear((255,255,255))
	textbox1.draw(window, None) #
	window.display()