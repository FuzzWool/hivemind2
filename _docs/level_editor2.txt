goals > level_editor > level_editor2
LEVEL 2 NOTES
============================================

==========================================================
SPEECH
==========================================================
Created for practice. Will likely be scrapped later on.

+ Text Class
Create my own text class.
	
	+ basic Bitmap Text class
		+ basic drawable, loads a texture
		+ reads characters, translates to clips
		+ multiline
		+ caps
		+ grammar

	! advanced Bitmap text class
		+ each letter is an individual class (stores position/letter)


		+ letter spacing
			+ Text Spacing Tool
			+ draw boxes around each letter to contain them
			+ each letter has it's own box
			+ highlight the letter currently being edited
			+ draw a box for each individual letter
			+ load/save the positioning data

			+ Text reads letter spacing data

		~ clean
			~ Text/Letter is split into events/logic


		+ Positioning
			~ vertex_array is created every loop
			~ Text x/y moves each Letter
			~ Letters are only created on Write
			+ text may be moved around
			+ letters may be moved around

		+ Color (transparency)
			* No actual color support

		~ moved files
			~ .window has camera
			~ .graphics has animation, mysprite, rectangle
			~ .graphics has Font, Text

	~ fixed button glitch

	+ basic Speech
		+ boxes Text
		+ opens / closes
		+ shows Text letter-by-letter






==========================================================
LEVEL EDITOR UI
==========================================================

! new UIBox standard
	. communication, states, graphics
	UI Elements are stacked using the same base.
	UI Communication

	+ Box opens and closes
	+ Box parents children, they open and close with it

	+ Buttons
		+ state colors
		+ text
			+ position (adjusts for rise_offset)
			+ alpha
		+ RED Cancel Button
		+ GREEN Confirm Button


	! Slider
		
		+ GRAPHICS
			+ lines (set externally)
			+ block
			
		+ LOGIC
			+ Click, drag: Box follows cursor
			+ Drag, release: Box snaps to nearest line
				+ (If no lines, no snapping)
				+ (optional) with tweening
				+ work out the closest point

		! TYPES
			+ Horizontal / Vertical Sliders
	
		+ bounds enlargements


+ 'Fixing' the old UI
	+ Masking
		+ Drawables
		Every UI object is a Drawable type.
		It draws itself directly onto the provided Target.
		Target may be intercepted to be a RenderTexture instead of Window.

	+ MaskBox
		+ Masking off-box objects
		+ Ignoring controls of completely off-screen objects
		+ Scrolling in any direction
			+ offset (Rectangle) (movement/size)

+ SliderBox
	+ MaskBox, Slider
	~ Slider is sized to MaskBox.offset.size
	+ Slider moves MaskBox.offset
		+ Slider value moves MaskBox.offset.h
		+ Bounded Sliders have proper values

! Tile Tool
	+ ToggleButton
	+ Dropdown
		+ Held and Not-Held
		+ Held: opens cells inside
		+ Press: selects a cell
			+ change the Dropdown name to the cell
			+ close the Dropdown
			+ test: may select cell outside of window
		+ Hover: selects a sub-Dropdown
			+ opens sub-Dropdown contents
			+ hovering another Dropdown in that parent closes it
			+ selecting a cell inside of the Dropdown returns the path to root
			+ names the box by the cell and it's paths
			
	! TileSelector
		+ Sheet
		+ Grid
		+ Cursor
		! Tie into ToolBox

	! ToolBox
		+ Top Strip
		+ Toggle
		+ 'Nothing' Tool
		! Tile Tool
			+ Hold space: Tile Selector pops up
			
			+ Selecting different tools
				~ activity set to open/close
				+ active_colors, deactive_colors
			+ Icon Graphic

			+ Adding/Removing WorldMap tiles
				+ WorldMap Cursor
				+ Cursor changes Map tiles
					~ add_controls(WorldMap)
					~ _change_tile
					~ public, private format for WorldMap
					~ manually change a tile
					+ tile tool adds/removes tiles
					~ fixed: lag upon changing many tiles w/ moving

			+ Choose a Tile from TileSelector
				+ arrow keys move rooms
				+ old cursor position for TileSelector UI

			+ Multi-tile placement
				+ (selector) grabbing multiple tiles
				+ (cursor) applying multiple tiles
					+ (cursor) widens erasing, too
				+ (cursor g) widens cursor
				~ fixed oob glitches

			+ ToolBar hovered, disable cursor
				+ (states > parent_states)

			! Change Room tilesheet
				+ (os) grab tilesheet items
				+ (Selector) grab tilesheet items (folders, files)


				+ Multiple tilesheets per room
					~ tile.data format changed (sheet/xx/yy)
					~ lists of _render_arrays and _render_states

					+ pure logic (tested)
						+ Adding: chooses new slot, error on leak
						+ Replacing: cleanly chooses new slot
						+ Removing: old textures are removed
						
					+ graphics updating
						+ texture, clip for Tile, no _data
							~ child_listen, parent_tell model
							+ child_tell, parent_listen for texture_slots
						+ change state textures
						
					+ Adding new textures from Selector

			
			+ Grid Toggle Button (Q)

			! Help Box (hover Tool)
				+ hovering the tile tool opens a box
				+ Box w/ Control Help text
					+ Multiline_Text (Rectangle-bounded Text)
						+ Text exceeds width: move text a line down
						+ "\n" manually moves text a line down
						~ moved to main code
						+ color, positioning

				+ Tile Tool text

				+ Created upon being opened, destroyed upon being closed
				+ generic Tool Help for every Tool
					+ Tool Help is part of _Tool, only changes text


			+ Error Box
				+ (error: 3 textures in to a Room, can't add more)
					+ logic: has_slot_for_texture (via tile.room)
					+ logic: TILESHEET_CAP now properly used
					+ open an error Textbox
					+ close Box

			***

			! Stress Testing
				! Loading times - Amount of Rooms in a Level. (WorldMap it)
					! Rooms
				! Lag (check CPU usage) - Amount of render layers per Room.
					! Render Layers

			! (Alt) Eyedropper Tool
				For selecting tiles on the WorldMap.
				! (Click) selects a single tile
				! (Click, drag) Selects multiple tiles

			***
=====================================================================

			! Map Saving/Loading
				! (error: sheet removed) remove old texture, use default texture

				! save a map folder
				! save map files (header: texture, body: tiles)

				! load (different) map folders




		! General controls
			! Unique Map saving
				Save, Save As, Open

			! Zoom scale
			! Hotkeys for Tools (1,2,3...)
			! Help Box (for controls, general advice)


		! Entity Tool


		! Level Tool
		A Level is a a collection of Rooms seperated from the WorldMap for loading.
		Sets loading for all of the Level's tiles and entities.
		All Rooms are unloaded. Unloaded, They are generic boxes.
		When loaded, they become editable.

			! Recycling textures. Loads in advance for Level to cut stress.
			(Texture limit per Level: 40(?))

			! Get: Rooms are (un)loaded.
				! (Click) A level is loaded/unloaded.
					! Up to 5 levels may be loaded at one time.

			! Set: Rooms are set to be batched in a Level.
				! (Space+Click) A Room is assigned to a Level.
					! Up to 50(?) rooms may be in a level.

			! Entity loading/limits



=================================================


! ToolBox
	! Icons

! Entity Tool
	! Dropdown
	+ SliderBox



! Warning Message (example: an entity has an error)
! UI Box (Help dialogue for Tile)






***

Problems with UI
	Masking is awkward
	Positioning is awkward
	Alpha preservation is awkward