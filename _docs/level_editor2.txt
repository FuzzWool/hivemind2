goals > level_editor > level_editor2
LEVEL 2 NOTES
============================================

==========================================================
SPEECH
==========================================================
Created for practice. Will likely be scrapped later on.

+ Text Class
Create my own text class.
	
	+ basic Bitmap Text class
		+ basic drawable, loads a texture
		+ reads characters, translates to clips
		+ multiline
		+ caps
		+ grammar

	! advanced Bitmap text class
		+ each letter is an individual class (stores position/letter)


		+ letter spacing
			+ Text Spacing Tool
			+ draw boxes around each letter to contain them
			+ each letter has it's own box
			+ highlight the letter currently being edited
			+ draw a box for each individual letter
			+ load/save the positioning data

			+ Text reads letter spacing data

		~ clean
			~ Text/Letter is split into events/logic


		+ Positioning
			~ vertex_array is created every loop
			~ Text x/y moves each Letter
			~ Letters are only created on Write
			+ text may be moved around
			+ letters may be moved around

		+ Color (transparency)
			* No actual color support

		~ moved files
			~ .window has camera
			~ .graphics has animation, mysprite, rectangle
			~ .graphics has Font, Text

	~ fixed button glitch

	+ basic Speech
		+ boxes Text
		+ opens / closes
		+ shows Text letter-by-letter






==========================================================
LEVEL EDITOR UI
==========================================================

! Tile Tool

	+ UI Box
	A window which handles all of the widgets.
		#
		+ points: Draw a box.
		+ open/close: alpha, smooth x/y

	+ Dropdown
	A dropdown menu with cells and more dropdown menus.
		#
		* Model:
			* Dropdown.root
			* _Dropdown.parent > child
		#
		+ Dropdown creates cells from a list
		+ Dropdown opens and closes
		+ Dropdown selects a cell
		+ Dropdown selects a Dropdown_Dropdown cell
		+ Dropdown_Dropdowns close when others are opened
		+ Dropdown's name is formatted: selected (hovered)


	+ TileSelector
		An image split into a gridded view.
		Individual tiles from the grid may be selected.
		Multiple tiles may be selected at once.

		+ Tilemap with a Grid overlay (Grid class)
		+ Cursor appears over the image
		+ Cursor selects a tile, old selection still visible
		+ Cursor graphics update with Window open/closes


! new UIBox standard
	. communication, states, graphics
	UI Elements are stacked using the same base.
	UI Communication

	+ Box opens and closes
	+ Box parents children, they open and close with it

	+ Buttons
		+ state colors
		+ text
			+ position (adjusts for rise_offset)
			+ alpha
		+ RED Cancel Button
		+ GREEN Confirm Button


	! Slider
		
		+ GRAPHICS
			+ lines (set externally)
			+ block
			
		+ LOGIC
			+ Click, drag: Box follows cursor
			+ Drag, release: Box snaps to nearest line
				+ (If no lines, no snapping)
				+ (optional) with tweening
				+ work out the closest point

	=======================================
		! TYPES
			+ Horizontal / Vertical Sliders
			
			! SliderBox


	! TextBox
	! TabBox

	! ToolBox
		! Shiny ToolIcon

	! Disable inactive windows




! use Grid in main's WorldMap
! Entity Tool

	! ScrollBox
		A box with a scroller.
		The contents of the box scroll with the scroller.

	! SpriteSelector
		A ScrollBox containing a list of images.
		Images are loaded left-to-right,
		and move down a row when there are too many.
		A sprite may be clicked to be selected.

! Warning Message (example: an entity has an error)
! UI Box (Help dialogue for Tile)






***

! New UIBox standard
HUI (Hivemind User Interface)
	! Research Windows Forms

	! Effects
		! Opening/Closing (3D Dropdown Movement)
			! 4 different directions (2 per axis)
			! 3 different speeds
		! States
			! Hovering (Raises a D)

	! Graphical Styles
		! Background, Outline, Button Colors

	! States
		Hovering (raise a D)

	! Tabs
		For diving the UI Window into multiple sections.
		Each room may use up to 3 different tilesets.

	! Scrollers
		! Contents inside of a box scroll...
			! up and down
			! left and right